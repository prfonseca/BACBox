function varargout=BACrecon(varargin)
% recebe sinograma de um ou mais cortes e reconstroi
%
% sintaxes possiveis
% imagens=BACrecon(sinograma);
% imagens=BACrecon();
% imagens=BACrecon(sinograma,minterp,janela);
%
%   SINOGRAMA: uma matriz bi ou tridimensional
%   MINTERP: string com o metodo de interpolacao
%   JANELA: string com a janela da transformada inversa de radon


% truque sujo para evitar erro quando chamado pela interface
if nargin==2&&isnumeric(varargin{1});     nargo=0;
else     nargo=nargin;
end

% comeca a criar a interface
ph=figure(999);BACmenu(ph); coord=get(ph,'Position');

uicontrol('Style','text',...
    'Units','pixels','Position',[0 coord(4)-20 120 20],...
    'String','Arq. selecionado:',...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5])
ena=uicontrol('Style','edit',...
    'Units','pixels','Position',[125 coord(4)-20 485 20],...
    'Tag','nomedoarquivo',...
    'String','selecione um sinograma no botao ao lado',...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5]);

switch nargo
    case 0 % pede para selecionar sinograma
        uicontrol('Style','pushbutton',...
            'Units','pixels',...
            'Position',[620 coord(4)-20 20 20],...
            'String','...',...
            'Tag','bt_selarq',...
            'Callback',{@carrega,ph,ena})
    case 1  % usa o sinograma de entrada
        set(ena,'String',inputname(1))
        setappdata(ph,'sinograma',varargin{1});
        setappdata(ph,'nomesino',inputname(1));     
        opcoes(ph)                                  % chama menu de opcoes
    case 3
        set(ena,'String',inputname(1))
        setappdata(ph,'sinograma',varargin{1});
        setappdata(ph,'nomesino',inputname(1));
        opcoes(ph)                                  % chama menu de opcoes
        set(findobj(ph,'Tag','interpolacao'),'string',varargin{2});
        set(findobj(ph,'Tag','janela'),'string',varargin{3})
    otherwise; BACmsg('naoprevisto',mfilename);return;
end
figure(gcf)

end

function carrega(~,~,ph,ena)
    % carrega um sinograma e salva na janela
    [fname,pname]=aux_interf_load(cd,'Selecione um sinograma');
    if isequal(fname,0); BACmsg('usrcanc',mfilename);return; end
    nombre=fullfile(pname,fname);           clear fname pname
    set(ena,'String',nombre);
    sinograma=load(nombre);
    sinograma=struct2array(sinograma);
    setappdata(ph,'sinograma',sinograma);   clear sinograma
    setappdata(ph,'nomesino',nombre);      clear nombre
    opcoes(ph) % chama menu de opcoes
end

function opcoes(ph)
coord=get(ph,'Position');
sinograma=getappdata(ph,'sinograma'); %le o sinograma
[nang nfeixes ncanais]=size(sinograma);
uicontrol('Style','text',...
    'Units','pixels','Position',[0 coord(4)-50 100 20],...
    'String','# angulos',...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5]);

enang=uicontrol('Style','edit',...
    'Units','pixels','Position',[0 coord(4)-75 100 20],...
    'Tag','numang',...
    'String',num2str(nang),...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5]);

uicontrol('Style','text',...
    'Units','pixels','Position',[110 coord(4)-50 100 20],...
    'String','# feixes/angulo',...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5])

enfeixes=uicontrol('Style','edit',...
    'Units','pixels','Position',[110 coord(4)-75 100 20],...
    'Tag','numang',...
    'String',num2str(nfeixes),...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5]);

uicontrol('Style','text',...
    'Units','pixels','Position',[220 coord(4)-50 100 20],...
    'String','Janela',...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5])


popjan=uicontrol('Style','popup',...
    'Units','pixels','Position',[220 coord(4)-75 100 20],...
    'Tag','janela',...
    'String','Hamming|Shepp-Logan|Cosine|Hann|Ram-Lak|None',...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5]);

uicontrol('Style','text',...
    'Units','pixels','Position',[330 coord(4)-50 100 20],...
    'String','Interpolacao',...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5])

popinter=uicontrol('Style','popup',...
    'Units','pixels','Position',[330 coord(4)-75 100 20],...
    'Tag','interpolacao',...
    'String','Cubic|Spline|Linear|None',...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5]);

uicontrol('Style','text',...
    'Units','pixels','Position',[440 coord(4)-50 100 20],...
    'String','Tam. imagem (px)',...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5]);

etam=uicontrol('Style','edit',...
    'Units','pixels','Position',[440 coord(4)-75 100 20],...
    'Tag','numang',...
    'String',num2str(nfeixes),...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5]);

uicontrol('Style','pushbutton',...
    'Units','pixels','position',[550 coord(4)-75 100 50],...
    'Tag','btok',...
    'String','Proximo (I)',...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5],...
    'Callback',{@proximopasso,...
    str2double(get(enang,'string')),...
    str2double(get(enfeixes,'string')),...
    str2double(get(etam,'string')),...
    popjan,...%get(popjan,'string'),...
    popinter,...%get(popinter,'string'),...
    ph,sinograma,ncanais})
end
function proximopasso(~,~,varargin)
nang=     varargin{1};          %nfeixes=  varargin{2};
tam=      varargin{3};          popjan=   varargin{4};
popinterp=varargin{5};          ph=       varargin{6};
sinograma=varargin{7};          ncanais=  varargin{8};

janela=get(popjan,'string');    janela=janela(get(popjan,'value'),:);
janela=strtok(janela,' ');
interp=get(popinterp,'string'); interp=interp(get(popinterp,'value'),:);
interp=strtok(interp,' ');

t=360/nang;                     theta=0:t:(360-t);

d=1:ncanais; str=num2str(d');   coord=get(ph,'position');

uicontrol('Style','text',...
    'Units','pixels',...
    'position',[0 coord(4)-100 100 20],...
    'String','Selecione canal (is)',...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5])

listacanais=uicontrol('Style','listbox',...
    'Units','pixels',...
    'Position',[0 coord(4)-302 100 195],...
    'Tag','listacanais',...
    'Min',1,...
    'Max',ncanais+1,...
    'String',str,...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5]);

bgh = uibuttongroup('Parent',ph,...
    'Title','Tipo de reconstrucao',...
    'Units','pixels',...
    'Position',[110 coord(4)-180 215 100],...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5]);

radio_indv = uicontrol(bgh,...
    'Style','radiobutton',...
    'String','Canal(is) independente(s)',...
    'Units','normalized',...
    'Position',[.1 .6 .7 .2],...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5]);

radio_mult = uicontrol(bgh,...
    'Style','radiobutton',...
    'String','Multiplos canais',...
    'Units','normalized',...
    'Position',[.1 .2 .7 .2],...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5]);

uicontrol('style','pushbutton',...
    'Units','pixel',...
    'Position',[110 coord(4)-300 215 50],...
    'String','Proximo (II)',...
    'FontSize',8,...
    'BackgroundColor',[0 1 0.5],...
    'Callback',{@reconstruir,...
    sinograma,theta,ncanais,tam,janela,interp,...
    listacanais,radio_indv,radio_mult,ph})
end

function reconstruir(~,~,varargin)
sinograma   =varargin{1};    theta       =varargin{2};
ncanais     =varargin{3};    tam         =varargin{4};
janela      =varargin{5};    interp      =varargin{6};
lc          =varargin{7};    individual  =varargin{8};
multiplo    =varargin{9};    ph          =varargin{10};

setappdata(ph,'theta',theta);
setappdata(ph,'tam',tam);
setappdata(ph,'interp',interp);
setappdata(ph,'janela',janela);

lc=get(lc,'value'); coord=get(ph,'position');

if ncanais>1  % se ha mais de um canal para reconstruir
    
    
    if length(lc)==1                                        % caso selecione um so
        sinograma=sinograma(:,:,lc)';                       % sinograma
        tomo=iradon(sinograma,theta,interp,janela,1,tam);   % reconstroi
        setappdata(ph,'tomo',tomo);                         % salva variavel
        set(individual,'visible','off');
        set(multiplo  ,'visible','off');
        
   
    else                                                    % caso selecione varios canais
        formula=get(individual,'value')*3+get(multiplo,'value');
        
        if formula==3 % reconstrucao individual
            tomo=zeros(tam,tam,length(lc));                 % cria variavel
            for count=lc                                    % para cada canal
                s=sinograma(:,:,count); s=s';               % sinogramas
                tomo(:,:,count)=iradon(s,theta,interp,janela,1,tam); % reconstroi
            end
            setappdata(ph,'tomo',tomo);                     % salva variavel em ph
            
            
        elseif formula==1 % reconstrucao multiplos canais
            
            tgh = uibuttongroup('Parent',ph,'Title','Arranjo dos sensores',...
                'Units','pixels',...
                'Position',[340 coord(4)-300 305 220],...
                'FontSize',8,...
                'BackgroundColor',[0 1 0.5]);
            
            th=uitable(tgh,...                  %cria a tabela
                'Units','normalized',...        % unidades        
                'Position',[0 0 .7 1],...       % posicaoo e dimensoes
                'ColumnWidth',{22},...          % largura das colunas
                'BackgroundColor',[0 1 1],...   % cor de fundo da tabela
                'Tag','tabela',...              % tag da tabela
                'ColumnEditable',true(1,7));    % define colunas editaveis
            sens=padrao(th);                    % usa valores padrao da tabela
            sens=descarta(lc,sens);
            set(th,'Data',sens);
            
            uicontrol(tgh,'Style', 'pushbutton',...     
                'String', 'Voltar padrao',...
                'Units','normalized',...        % unidades
                'Position', [.72 0.1 .25 .22],...
                'Callback', {@padrao,th},...
                'FontSize',8,...
                'BackgroundColor',[0 1 0.5]);
            
            
            uicontrol(tgh,'Style', 'pushbutton',...
                'String', 'Girar 90o',...
                'Units','normalized',...        % unidades        
                'Position', [.72 .4 .25 .22],...
                'Callback', {@noventa,th},...
                'FontSize',8,...
                'BackgroundColor',[0 1 0.5]);
            
            uicontrol(tgh,'Style', 'pushbutton',...
                'String','Proximo (III)',...
                'Units','normalized',...        % unidades
                'Position', [.72 .7 .25 .22],...
                'Callback', {@feito,ph,th},...  % chama funcao para processar
                'FontSize',8,...
                'BackgroundColor',[0 1 0.5]);
        end
        clear formula                           % limpa variavel
    end
    
else %caso a entrada seja um sinograma de um canal so
    sinograma=sinograma';                               % sinograma
    tomo=iradon(sinograma,theta,interp,janela,1,tam);   % reconstroi
    setappdata(ph,'tomo',tomo);                         % salva variavel em ph
    
end

end


function varargout=padrao(varargin)
sens=[
    0        8          0          13       0
    0        0          7          0        0
    0        2          0          6        0
    9        0          1          0        12
    0        3          0          5        0
    0        0          4          0        0
    0        10         0          11       0];
Sens=zeros(7);      Sens(:,2:6)=sens;  clear sens
% joga as posicoes dentro da tabela, quando ela existe
if nargin==1;    set(varargin{1},'Data',Sens);
elseif nargin==3;set(varargin{3},'Data',Sens);end
% 
if nargout==1; varargout{1}=Sens; end

end

function noventa(varargin)
% gira posicao do sensor em 90 graus
if nargin==1;    th=varargin{1};
elseif nargin==3;th=varargin{3};end
Sens=get(th,'Data');
Sens=Sens';
set(th,'Data',Sens);
end

function feito(~,~,fh,th)
Sens=get(th,'Data');
n0=Sens(Sens~=0);
n0=sort(n0)';
if length(n0)>1
    for c=2:length(n0)
        if n0(c)==n0(c-1)
            errordlg(['Sensor esta ', num2str(n0(c)),' repetido.',10,'Refaca'],...
                'Erro','modal')
            return
        end
    end
end
grava(fh,th);
reconstroimulti(fh);
end

function reconstroimulti(ph)
    sens=       getappdata(ph,'sens');      % arranjo sensores
    sinograma=  getappdata(ph,'sinograma'); % sinograma
    theta=      getappdata(ph,'theta');     % vetor angulos
    tam=        getappdata(ph,'tam');       % 
    interp=     getappdata(ph,'interp');    % método de interpolação
    janela=     getappdata(ph,'janela');    % janelamento
    
    novosinos=BACvarre(sinograma,sens);     % reconstroi sinogramas multi-canal 
    
    for count=1:size(novosinos,3)           % reconstroi por FBP cada um      
        ns=novosinos(:,:,count)';
        ns=im2double(im2uint16(ns));
        novotomo(:,:,count)=iradon(ns,theta,interp,janela,1,tam); % reconstroi FBP
    end
    setappdata(ph,'novosinos',novosinos);   % salva variavel em ph
    setappdata(ph,'novotomo',novotomo);     % salva variavel em ph    
    
end

function sens=descarta(vmedida,sens)
     %descarta sensores nao utilizados
     pos1=find(sens~=0);
     P=pos1*ones(1,length(vmedida));
     Q=sens(P);
     for c=1:length(vmedida); Q(:,c)=Q(:,c)==vmedida(c); end
     Q=sum(Q,2); sens(P(Q==0))=0;
     clear Q P
end

function grava(ph,th)
    % grava os dados na figura
    Sens=get(th,'Data');
    setappdata(ph,'sens',Sens);
    set(th,'ColumnEditable',false(1,7))
end
